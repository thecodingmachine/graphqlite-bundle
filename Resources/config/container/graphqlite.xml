<?xml version="1.0" encoding="UTF-8" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services
                               http://symfony.com/schema/dic/services/services-1.0.xsd"
>
    <parameters>
        <parameter key="graphqlite.annotations.error_mode">LAX_MODE</parameter>
    </parameters>

    <services>
        <defaults autowire="true" autoconfigure="true" public="false" />

        <service id="TheCodingMachine\GraphQLite\SchemaFactory">
            <argument type="service" id="graphqlite.psr16cache" />
            <argument type="service" id="service_container" />
            <call method="setAuthenticationService">
                <argument type="service" id="TheCodingMachine\GraphQLite\Security\AuthenticationServiceInterface" />
            </call>
            <call method="setAuthorizationService">
                <argument type="service" id="TheCodingMachine\GraphQLite\Security\AuthorizationServiceInterface" />
            </call>
        </service>

        <service id="TheCodingMachine\GraphQLite\Schema" public="true">
            <factory service="TheCodingMachine\GraphQLite\SchemaFactory"
                     method="createSchema"
            />
        </service>

        <service id="TheCodingMachine\GraphQLite\AggregateControllerQueryProviderFactory">
            <argument type="collection">
            </argument>
            <argument type="service" id="service_container">
            </argument>
            <tag name="graphql.queryprovider_factory" />
        </service>

        <service id="GraphQL\Type\Schema" alias="TheCodingMachine\GraphQLite\Schema" />


        <service id="TheCodingMachine\GraphQLite\AnnotationReader" >
            <argument key="$mode">%graphqlite.annotations.error_mode%</argument>
        </service>

        <service id="TheCodingMachine\GraphQLite\Bundle\Security\AuthenticationService">
            <argument type="service" id="security.token_storage" on-invalid="null" />
        </service>

        <service id="TheCodingMachine\GraphQLite\Security\AuthenticationServiceInterface" alias="TheCodingMachine\GraphQLite\Bundle\Security\AuthenticationService" />

        <service id="TheCodingMachine\GraphQLite\Bundle\Security\AuthorizationService">
            <argument type="service" id="security.authorization_checker" on-invalid="null" />
        </service>

        <service id="TheCodingMachine\GraphQLite\Security\AuthorizationServiceInterface" alias="TheCodingMachine\GraphQLite\Bundle\Security\AuthorizationService" />

        <service id="GraphQL\Server\ServerConfig" class="TheCodingMachine\GraphQLite\Bundle\Server\ServerConfig">
            <call method="setSchema">
                <argument type="service" id="TheCodingMachine\GraphQLite\Schema"/>
            </call>
            <call method="setErrorFormatter">
                <argument type="collection">
                    <argument>\TheCodingMachine\GraphQLite\Exceptions\WebonyxErrorHandler</argument>
                    <argument>errorFormatter</argument>
                </argument>
            </call>
            <call method="setErrorsHandler">
                <argument type="collection">
                    <argument>\TheCodingMachine\GraphQLite\Exceptions\WebonyxErrorHandler</argument>
                    <argument>errorHandler</argument>
                </argument>
            </call>
        </service>

        <service id="GraphQL\Validator\Rules\DisableIntrospection">
            <argument key="$enabled">%graphqlite.security.disableIntrospection%</argument>
        </service>

        <service id="GraphQL\Validator\Rules\QueryComplexity" />

        <service id="GraphQL\Validator\Rules\QueryDepth" />

        <service id="TheCodingMachine\GraphQLite\Mappers\StaticTypeMapper">
            <tag name="graphql.type_mapper"/>
        </service>

        <service id="TheCodingMachine\GraphQLite\Bundle\Controller\GraphQLiteController" public="true">
            <tag name="routing.route_loader"/>
        </service>

        <service id="TheCodingMachine\GraphQLite\Bundle\Mappers\RequestParameterMiddleware">
            <tag name="graphql.parameter_middleware"/>
        </service>

        <service id="TheCodingMachine\GraphQLite\Validator\Mappers\Parameters\AssertParameterMiddleware">
            <argument type="service" id="validator.validator_factory" />
            <tag name="graphql.parameter_middleware"/>
        </service>

        <service id="TheCodingMachine\GraphQLite\Bundle\Controller\GraphQL\LoginController" public="true">
            <argument key="$firewallName">%graphqlite.security.firewall_name%</argument>
        </service>

        <service id="TheCodingMachine\GraphQLite\Bundle\Controller\GraphQL\MeController" public="true" />

        <service id="TheCodingMachine\GraphQLite\Bundle\Types\SymfonyUserInterfaceType" public="true"/>

        <service id="TheCodingMachine\GraphQLite\Mappers\StaticClassListTypeMapperFactory">
            <argument type="collection">
            </argument>
            <tag name="graphql.type_mapper_factory"/>
        </service>

        <service id="graphqlite.phpfilescache" class="Symfony\Component\Cache\Adapter\PhpFilesAdapter">
            <argument>graphqlite</argument>
            <argument>0</argument>
            <argument>%kernel.cache_dir%</argument>
        </service>

        <service id="graphqlite.apcucache" class="Symfony\Component\Cache\Adapter\ApcuAdapter">
            <argument>graphqlite</argument>
        </service>

        <service id="graphqlite.psr16cache" class="Symfony\Component\Cache\Psr16Cache">
            <argument type="service" id="graphqlite.cache" />
        </service>

        <service id="graphqlite.cacheclearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
            <argument type="collection">
                <argument type="service" id="graphqlite.cache" />
            </argument>
            <tag name="kernel.cache_clearer"/>
        </service>

        <service id="TheCodingMachine\GraphQLite\Bundle\Command\DumpSchemaCommand" />
    </services>
</container>
